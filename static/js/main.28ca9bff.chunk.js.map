{"version":3,"sources":["store/actions.ts","store/storeTypes.ts","components/Button/Button.tsx","types/btnTypes.ts","store/actionCreators.ts","components/BasicButtons/BasicButtons.tsx","components/App/App.tsx","store/initialState.ts","store/reducer.ts","store/store.ts","index.tsx"],"names":["actions","useTypedSelector","useSelector","Button","model","dispatch","useDispatch","currentValue","state","curValue","lastOperation","operator","isDot","useState","value","text","setText","activeStyle","setActiveStyle","operationsToSymbols","sum","dec","mul","div","useEffect","className","style","onClick","payload","callback","console","log","ButtonVisual","setCur","val","type","perc","inv","setDot","calculate","clear","remove","ButtonModel","color","func","this","light","colored","BasicButtons","checkOperations","operation","actionCreator","BasicButtonsModel","map","button","App","initialState","mode","prevValue","reducer","action","slice","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ca9bff.chunk.js","sourcesContent":["enum actions {\n  setCur = 'SET_CURRENT',\n  sum = 'OP_SUM',\n  dec = 'OP_DEC',\n  mul = 'OP_MUL',\n  div = 'OP_DIV',\n  perc = 'OP_PERC',\n  inv = 'VAL_INV',\n  clear = 'VAL_CLEAR',\n  remove = 'VAL_REMOVE',\n  calculate = 'VAL_CALCULATE',\n  setDot = 'VAL_SET_DOT',\n}\n\nexport default actions\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport actions from './actions'\nimport state from '../store/reducer'\n\ntype stateType = ReturnType<typeof state>\n\nexport const useTypedSelector: TypedUseSelectorHook<stateType> = useSelector\n\n\ntype modeType = 'simple' | 'extended'\nexport type operatorType = null | 'sum' | 'dec' | 'mul' | 'div' | 'perc'\n\nexport type numOrDot = number | '.'\n\nexport interface Istate {\n  mode: modeType\n  curValue: number | null\n  prevValue: number | null\n  operator: operatorType\n  isDot: Boolean\n}\n\nexport interface actionType {\n  type: actions\n  value?: numOrDot\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useTypedSelector } from '../../store/storeTypes'\nimport { ButtonProps } from '../../types/btnTypes'\nimport './Button.scss'\n\nconst Button: React.FC<ButtonProps> = ({model}) => {\n  \n  const dispatch = useDispatch()\n  const currentValue = useTypedSelector(state => state.curValue)\n  const lastOperation = useTypedSelector(state => state.operator)\n  const isDot = useTypedSelector(state => state.isDot)\n  const [text, setText] = useState(model.value)\n  const [activeStyle, setActiveStyle] = useState(false)\n\n  const operationsToSymbols = {\n    sum: '+',\n    dec: '-',\n    mul: 'x',\n    div: 'รท',\n  }\n\n  useEffect(() => {\n    if (operationsToSymbols[lastOperation] === model.value) {\n      setActiveStyle(true)\n    } else {\n      setActiveStyle(false)\n    }\n\n    if (model.value === '.' && isDot) {\n      setActiveStyle(true)\n    } else {\n      setActiveStyle(false)\n    }\n  }, [lastOperation, isDot])\n\n  useEffect(() => {\n    if (model.value === 'AC') {\n      if (currentValue) {\n        setText('C')\n      } else {\n        setText('AC')\n      }\n    }\n  }, [currentValue])\n\n  \n  \n  return (\n    <button className={`btn ${model.style} ${activeStyle ? 'selected' : ''}`} onClick={() => {\n      const payload = model.callback()\n      console.log('inside', payload)\n      dispatch(payload)\n      }}>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import { ButtonModel } from '../components/BasicButtons/BasicButtons'\n\nexport enum ButtonVisual {\n  light = 'btn__light',\n  dark = 'btn__dark',\n  colored = 'btn__colored',\n}\n\nexport interface ButtonProps {\n  model: ButtonModel,\n  //callback: Function\n}\n","import actions from './actions'\nimport { actionType, numOrDot } from './storeTypes'\n\nexport const setCur = (val: numOrDot): actionType => {\n  return {\n    type: actions.setCur,\n    value: val,\n  }\n}\n\nexport const sum = (): actionType => {\n  return {\n    type: actions.sum,\n  }\n}\nexport const dec = (): actionType => {\n  return {\n    type: actions.dec,\n  }\n}\nexport const mul = (): actionType => {\n  return {\n    type: actions.mul,\n  }\n}\nexport const div = (): actionType => {\n  return {\n    type: actions.div,\n  }\n}\nexport const perc = (): actionType => {\n  return {\n    type: actions.perc,\n  }\n}\nexport const inv = (): actionType => {\n  return {\n    type: actions.inv,\n  }\n}\nexport const setDot = (): actionType => {\n  return {\n    type: actions.setDot,\n  }\n}\nexport const calculate = (): actionType => {\n  return {\n    type: actions.calculate\n  }\n}\nexport const clear = (): actionType => {\n  return {\n    type: actions.clear\n  }\n}\nexport const remove = (): actionType => {\n  return {\n    type: actions.remove\n  }\n}\n","import React from 'react'\nimport { useTypedSelector, operatorType, actionType } from '../../store/storeTypes'\nimport Button from '../Button/Button'\nimport * as actionCreator from '../../store/actionCreators'\nimport { ButtonVisual } from '../../types/btnTypes'\nimport './BasicButtons.scss'\nimport { useDispatch } from 'react-redux'\n\nexport class ButtonModel {\n  value: string\n  style: ButtonVisual\n  callback: Function\n\n  constructor(value: string, color: string, func: Function) {\n    this.value = value\n    this.style = color === 'light' ? ButtonVisual.light : ButtonVisual.colored\n    this.callback = func\n  }\n}\n\nconst BasicButtons: React.FC = () => {\n\n  const value = useTypedSelector(state => state.curValue)\n  const lastOperation = useTypedSelector(state => state.operator)\n  const dispatch = useDispatch()\n\n  const checkOperations = (operation: operatorType, callback: Function) => {\n    console.log('checking')\n    if (lastOperation !== operation && lastOperation) {\n      dispatch(actionCreator[lastOperation]())\n    }\n    return callback()\n  }\n\n  const calculateValue = (): actionType => {\n    if (lastOperation) {\n      const callback = actionCreator[lastOperation]()\n      console.log(callback)\n      dispatch(callback)\n    }\n    return actionCreator.calculate()\n  }\n\n  const checkRemove = () => {\n    if (value) return actionCreator.remove()\n    else return actionCreator.clear()\n  }\n\n  const BasicButtonsModel: ButtonModel[] = [\n    new ButtonModel('AC', 'lighter', checkRemove),\n    new ButtonModel('ยฑ', 'lighter', actionCreator.inv),\n    new ButtonModel('%', 'lighter', actionCreator.perc),\n    new ButtonModel('รท', 'colored', () => checkOperations('div', actionCreator.div)),\n    new ButtonModel('1', 'light', () => actionCreator.setCur(1)),\n    new ButtonModel('2', 'light', () => actionCreator.setCur(2)),\n    new ButtonModel('3', 'light', () => actionCreator.setCur(3)),\n    new ButtonModel('x', 'colored', () => checkOperations('mul', actionCreator.mul)),\n    new ButtonModel('4', 'light', () => actionCreator.setCur(4)),\n    new ButtonModel('5', 'light', () => actionCreator.setCur(5)),\n    new ButtonModel('6', 'light', () => actionCreator.setCur(6)),\n    new ButtonModel('+', 'colored', () => checkOperations('sum', actionCreator.sum)),\n    new ButtonModel('7', 'light', () => actionCreator.setCur(7)),\n    new ButtonModel('8', 'light', () => actionCreator.setCur(8)),\n    new ButtonModel('9', 'light', () => actionCreator.setCur(9)),\n    new ButtonModel('-', 'colored', () => checkOperations('dec', actionCreator.dec)),\n    new ButtonModel('0', 'light', () => actionCreator.setCur(0)),\n    new ButtonModel('.', 'light', actionCreator.setDot),\n    new ButtonModel('=', 'colored', calculateValue),\n  ]\n\n  return (\n    <div>\n      <p>{value ? value : '_'}</p>\n      <div className='basicButtons'>\n        {BasicButtonsModel.map(button => {\n          return (\n            <Button key={button.value} model={button} />\n          )\n        })}\n      </div>\n    </div>\n    \n  )\n} \n\nexport default BasicButtons\n","import React from 'react'\nimport BasicButtons from '../BasicButtons/BasicButtons'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasicButtons />\n    </div>\n  )\n}\n\nexport default App\n","import { Istate } from './storeTypes'\n\nconst initialState: Istate = {\n  mode: 'simple',\n  curValue: null,\n  prevValue: null,\n  operator: null,\n  isDot: false,\n}\n\nexport default initialState\n","import initialState from './initialState'\nimport { Istate, actionType } from './storeTypes'\nimport actions from './actions'\n\nconst reducer = (state = initialState, action: actionType): Istate => {\n  switch (action.type) {\n\n    case actions.setCur:\n      if (state.operator && !state.prevValue) {\n        return {\n          ...state,\n          prevValue: state.curValue,\n          curValue: action.value !== '.' ? action.value! : null,\n        }\n      }\n      if (state.isDot) {\n        return {\n          ...state,\n          curValue: +(`${state.curValue}.${action.value}`),\n          isDot: false,\n        }\n      }\n      return {\n        ...state,\n        curValue: +(`${state.curValue ?? ''}${action.value}`)\n      }\n    case actions.sum:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.curValue + state.prevValue,\n          prevValue: null,\n          operator: 'sum'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'sum',\n      }\n\n    case actions.dec:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.prevValue - state.curValue,\n          prevValue: null,\n          operator: 'dec'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'dec',\n      }\n\n    case actions.mul:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.prevValue * state.curValue,\n          prevValue: null,\n          operator: 'mul'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'mul',\n      }\n\n    case actions.div:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.prevValue / state.curValue,\n          prevValue: null,\n          operator: 'div'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'div',\n      }\n\n    case actions.perc:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: (state.prevValue / 100) * state.curValue,\n        }\n      }\n      return {\n        ...state,\n        curValue: state.curValue / 100,\n      }\n\n    case actions.inv:\n      return {\n        ...state,\n        curValue: state.curValue * (-1)\n      }\n\n    case actions.setDot:\n      return {\n        ...state,\n        isDot: true,\n      }\n\n    case actions.calculate:\n      return {\n        ...state,\n        operator: null,\n      }\n    \n    case actions.clear:\n      return {\n        ...state,\n        curValue: null,\n        prevValue: null,\n        operator: null,\n      }\n\n    case actions.remove:\n      return {\n        ...state,\n        curValue: +(`${state.curValue}`.slice(0, -1)),\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { createStore } from 'redux'\nimport reducer from './reducer'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducer, composeWithDevTools())\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}