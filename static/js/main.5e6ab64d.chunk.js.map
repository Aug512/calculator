{"version":3,"sources":["components/StringInput/StringInput.module.scss","store/actions.ts","store/storeTypes.ts","components/Button/Button.tsx","types/btnTypes.ts","store/actionCreators.ts","components/BasicButtons/BasicButtons.tsx","parser/parser.ts","components/StringInput/StringInput.tsx","components/App/App.tsx","store/initialState.ts","store/reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","actions","useTypedSelector","useSelector","Button","model","dispatch","useDispatch","currentValue","state","curValue","lastOperation","operator","isDot","useState","value","text","setText","activeStyle","setActiveStyle","operationsToSymbols","sum","dec","mul","div","useEffect","className","style","onClick","payload","callback","console","log","ButtonVisual","setCur","val","type","perc","inv","setDot","calculate","clear","remove","ButtonModel","color","func","this","light","colored","BasicButtons","checkOperations","operation","actionCreator","BasicButtonsModel","map","button","Parser","parse","str","basis","posState","dotState","logData","bracketsLevel","closingBrackets","openingBrackets","parseBrackets","startedIndex","split","forEach","sym","index","push","closeBracketIndex","slice","filter","join","getFact","n","i","TypeError","JSON","stringify","message","pos","numbers","operators","operations","a","b","Infinity","pow","Math","output","expAnswer","length","checkBracketsBalance","trim","E","j","isNaN","parseInt","PI","parsed","answer","reduce","acc","error","StringInput","noErr","errPointerRef","useRef","exp","setExp","res","setRes","err","setErr","onSubmit","e","preventDefault","ans","current","left","styles","formWrapper","inputWrapper","input","onChange","evt","target","errPointer","showPointer","ref","calcBtn","title","errDescription","resultWrapper","result","width","margin","App","stringInputMode","setStringInputMode","checked","prev","initialState","mode","prevValue","reducer","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e6ab64d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"StringInput_formWrapper__AzLqe\",\"inputWrapper\":\"StringInput_inputWrapper__26Mn2\",\"input\":\"StringInput_input__3Wlel\",\"errPointer\":\"StringInput_errPointer__gfVLP\",\"showPointer\":\"StringInput_showPointer__pb9hE\",\"errDescription\":\"StringInput_errDescription__JFabJ\",\"calcBtn\":\"StringInput_calcBtn__6soSc\",\"resultWrapper\":\"StringInput_resultWrapper__X7n4D\",\"result\":\"StringInput_result__3CXoV\"};","enum actions {\n  setCur = 'SET_CURRENT',\n  sum = 'OP_SUM',\n  dec = 'OP_DEC',\n  mul = 'OP_MUL',\n  div = 'OP_DIV',\n  perc = 'OP_PERC',\n  inv = 'VAL_INV',\n  clear = 'VAL_CLEAR',\n  remove = 'VAL_REMOVE',\n  calculate = 'VAL_CALCULATE',\n  setDot = 'VAL_SET_DOT',\n}\n\nexport default actions\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport actions from './actions'\nimport state from '../store/reducer'\n\ntype stateType = ReturnType<typeof state>\n\nexport const useTypedSelector: TypedUseSelectorHook<stateType> = useSelector\n\n\ntype modeType = 'simple' | 'extended'\nexport type operatorType = null | 'sum' | 'dec' | 'mul' | 'div' | 'perc'\n\nexport type numOrDot = number | '.'\n\nexport interface Istate {\n  mode: modeType\n  curValue: number | null\n  prevValue: number | null\n  operator: operatorType\n  isDot: Boolean\n}\n\nexport interface actionType {\n  type: actions\n  value?: numOrDot\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useTypedSelector } from '../../store/storeTypes'\nimport { ButtonProps } from '../../types/btnTypes'\nimport './Button.scss'\n\nconst Button: React.FC<ButtonProps> = ({model}) => {\n  \n  const dispatch = useDispatch()\n  const currentValue = useTypedSelector(state => state.curValue)\n  const lastOperation = useTypedSelector(state => state.operator)\n  const isDot = useTypedSelector(state => state.isDot)\n  const [text, setText] = useState(model.value)\n  const [activeStyle, setActiveStyle] = useState(false)\n\n  const operationsToSymbols = {\n    sum: '+',\n    dec: '-',\n    mul: 'x',\n    div: '÷',\n  }\n\n  useEffect(() => {\n    if (operationsToSymbols[lastOperation] === model.value) {\n      setActiveStyle(true)\n    } else {\n      setActiveStyle(false)\n    }\n\n    if (model.value === '.' && isDot) {\n      setActiveStyle(true)\n    } else {\n      setActiveStyle(false)\n    }\n  }, [lastOperation, isDot])\n\n  useEffect(() => {\n    if (model.value === 'AC') {\n      if (currentValue) {\n        setText('C')\n      } else {\n        setText('AC')\n      }\n    }\n  }, [currentValue])\n\n  \n  \n  return (\n    <button className={`btn ${model.style} ${activeStyle ? 'selected' : ''}`} onClick={() => {\n      const payload = model.callback()\n      console.log('inside', payload)\n      dispatch(payload)\n      }}>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import { ButtonModel } from '../components/BasicButtons/BasicButtons'\n\nexport enum ButtonVisual {\n  light = 'btn__light',\n  dark = 'btn__dark',\n  colored = 'btn__colored',\n}\n\nexport interface ButtonProps {\n  model: ButtonModel,\n  //callback: Function\n}\n","import actions from './actions'\nimport { actionType, numOrDot } from './storeTypes'\n\nexport const setCur = (val: numOrDot): actionType => {\n  return {\n    type: actions.setCur,\n    value: val,\n  }\n}\n\nexport const sum = (): actionType => {\n  return {\n    type: actions.sum,\n  }\n}\nexport const dec = (): actionType => {\n  return {\n    type: actions.dec,\n  }\n}\nexport const mul = (): actionType => {\n  return {\n    type: actions.mul,\n  }\n}\nexport const div = (): actionType => {\n  return {\n    type: actions.div,\n  }\n}\nexport const perc = (): actionType => {\n  return {\n    type: actions.perc,\n  }\n}\nexport const inv = (): actionType => {\n  return {\n    type: actions.inv,\n  }\n}\nexport const setDot = (): actionType => {\n  return {\n    type: actions.setDot,\n  }\n}\nexport const calculate = (): actionType => {\n  return {\n    type: actions.calculate\n  }\n}\nexport const clear = (): actionType => {\n  return {\n    type: actions.clear\n  }\n}\nexport const remove = (): actionType => {\n  return {\n    type: actions.remove\n  }\n}\n","import React from 'react'\nimport { useTypedSelector, operatorType, actionType } from '../../store/storeTypes'\nimport Button from '../Button/Button'\nimport * as actionCreator from '../../store/actionCreators'\nimport { ButtonVisual } from '../../types/btnTypes'\nimport './BasicButtons.scss'\nimport { useDispatch } from 'react-redux'\n\nexport class ButtonModel {\n  value: string\n  style: ButtonVisual\n  callback: Function\n\n  constructor(value: string, color: string, func: Function) {\n    this.value = value\n    this.style = color === 'light' ? ButtonVisual.light : ButtonVisual.colored\n    this.callback = func\n  }\n}\n\nconst BasicButtons: React.FC = () => {\n\n  const value = useTypedSelector(state => state.curValue)\n  const lastOperation = useTypedSelector(state => state.operator)\n  const dispatch = useDispatch()\n\n  const checkOperations = (operation: operatorType, callback: Function) => {\n    console.log('checking')\n    if (lastOperation !== operation && lastOperation) {\n      dispatch(actionCreator[lastOperation]())\n    }\n    return callback()\n  }\n\n  const calculateValue = (): actionType => {\n    if (lastOperation) {\n      const callback = actionCreator[lastOperation]()\n      console.log(callback)\n      dispatch(callback)\n    }\n    return actionCreator.calculate()\n  }\n\n  const checkRemove = () => {\n    if (value) return actionCreator.remove()\n    else return actionCreator.clear()\n  }\n\n  const BasicButtonsModel: ButtonModel[] = [\n    new ButtonModel('AC', 'lighter', checkRemove),\n    new ButtonModel('±', 'lighter', actionCreator.inv),\n    new ButtonModel('%', 'lighter', actionCreator.perc),\n    new ButtonModel('÷', 'colored', () => checkOperations('div', actionCreator.div)),\n    new ButtonModel('1', 'light', () => actionCreator.setCur(1)),\n    new ButtonModel('2', 'light', () => actionCreator.setCur(2)),\n    new ButtonModel('3', 'light', () => actionCreator.setCur(3)),\n    new ButtonModel('x', 'colored', () => checkOperations('mul', actionCreator.mul)),\n    new ButtonModel('4', 'light', () => actionCreator.setCur(4)),\n    new ButtonModel('5', 'light', () => actionCreator.setCur(5)),\n    new ButtonModel('6', 'light', () => actionCreator.setCur(6)),\n    new ButtonModel('+', 'colored', () => checkOperations('sum', actionCreator.sum)),\n    new ButtonModel('7', 'light', () => actionCreator.setCur(7)),\n    new ButtonModel('8', 'light', () => actionCreator.setCur(8)),\n    new ButtonModel('9', 'light', () => actionCreator.setCur(9)),\n    new ButtonModel('-', 'colored', () => checkOperations('dec', actionCreator.dec)),\n    new ButtonModel('0', 'light', () => actionCreator.setCur(0)),\n    new ButtonModel('.', 'light', actionCreator.setDot),\n    new ButtonModel('=', 'colored', calculateValue),\n  ]\n\n  return (\n    <div>\n      <p>{value ? value : '_'}</p>\n      <div className='basicButtons'>\n        {BasicButtonsModel.map(button => {\n          return (\n            <Button key={button.value} model={button} />\n          )\n        })}\n      </div>\n    </div>\n    \n  )\n} \n\nexport default BasicButtons\n","interface parseBracketsReturn {\n  val: string\n  index: number\n}\n\ntype operation = 'sum' | 'dec' | 'mul' | 'div' | 'pow'\n\ninterface parseReturn {\n  numbers: number[]\n  operators: operation[]\n  expAnswer: number\n}\n\ninterface ICurrentValue {\n  val: number\n  posState: 1 | -1\n  dotState: number\n  logData: {\n    basis: null | number | string\n    value: null | number\n  }\n  bracketsLevel: number\n}\n\ninterface operationsReturn {\n  sum(a: number, b: number): number,\n  dec(a: number, b: number): number,\n  mul(a: number, b: number): number,\n  div(a: number, b: number): number,\n  pow(a: number, b: number): number,\n}\n\nconst Parser = () => {\n  return {\n    parse: (str: string): parseReturn => {\n      const currentValue: ICurrentValue = {\n        val: 0,\n        posState: 1,\n        dotState: 0,\n        logData: {\n          basis: null,\n          value: null,\n        },\n        bracketsLevel: -1,\n      }\n\n      const closingBrackets = []\n      const openingBrackets = []\n\n      const checkBracketsBalance = () => {\n        str.split('').forEach((sym: string, index: number) => {\n          if (sym === ')') {\n            closingBrackets.push(index)\n          }\n          if (sym === '(') {\n            openingBrackets.push(index)\n          }\n        })\n        if (openingBrackets.length > closingBrackets.length) {\n          throw new TypeError(JSON.stringify({message: 'Нарушен баланс скобок, не хватает закрывающей', pos: 0}))\n        }\n        if (openingBrackets.length < closingBrackets.length) {\n          throw new TypeError(JSON.stringify({message: 'Нарушен баланс скобок, не хватает открывающей', pos: 0}))\n        }\n      }\n\n      const parseBrackets = (str: string, startedIndex: number): parseBracketsReturn => {\n        //const closingBrackets = []\n        str.split('').forEach((sym: string, index: number) => {\n          if (sym === ')') closingBrackets.push(index)\n          if (sym === '(') openingBrackets.push(index)\n        })\n        const closeBracketIndex = closingBrackets[0 + currentValue.bracketsLevel]\n        return {\n          val: str.slice(startedIndex + 1, closeBracketIndex).split('').filter((sym: string) => sym !== '(' && sym !== ')').join(''),\n          index: closeBracketIndex\n        }\n      }\n\n      const calculateLog = (basis: number, value: number): number => {\n        return Math.log(value) / Math.log(basis)\n      }\n\n      const getFact = (n: number, i: number): number => {\n        if (n === 0) return 1\n        if (n % 1 !== 0 || n < 0) {\n          throw new TypeError(JSON.stringify({message: 'Аргумент факториала должен быть неотрицательным целым числом', pos: 0}))\n        } else {\n          return (n === 1) ? n : n * getFact(n - 1, i)\n        }\n      }\n      \n      const numbers: number[] = []\n      const operators: operation[] = []\n      \n      const operations: operationsReturn = {\n        sum: (a: number, b: number) => {\n          return a + b\n        },\n        dec: (a: number, b: number) => {\n          return a - b\n        },\n        mul: (a: number, b: number) => {\n          return a * b\n        },\n        div: (a: number, b: number) => {\n          return b === 0 ? -Infinity : a / b\n        },\n        pow: (a: number, b: number) => {\n          return Math.pow(a, b)\n        }\n      }\n\n      const output = {\n        numbers: numbers,\n        operators: operators,\n        expAnswer: 0,\n      }\n\n      try {\n        checkBracketsBalance()\n        if (!str.trim()) {\n          throw new TypeError(JSON.stringify({message: 'Введите выражение', pos: 0}))\n        }\n        for (let i = 0; i < str.length; i++) {\n          let sym = str[i]\n  \n          if (sym === ' ') continue\n  \n          else if (sym === '.' || sym === ',') {\n            currentValue.dotState = 10\n            continue\n          }\n  \n          else if (str[i] === 'e') {\n            if (!currentValue.val) {\n              currentValue.val = Math.E\n            } else {\n              throw new TypeError(JSON.stringify({message: 'Число Эйлера должно быть отделено операндом', pos: i + 1}))\n            }\n            for (let j = i + 1; j < str.length; j++) {\n              if (str[j] === ' ') {\n                continue\n              } else if (!isNaN(parseInt(str[j]))) {\n                throw new TypeError(JSON.stringify({message: 'Число Эйлера должно быть отделено операндом', pos: i + 1}))\n              } else {\n                break\n              }\n            }\n          }\n\n          else if (str.slice(i, i + 2) === 'pi') {\n            if (!currentValue.val) {\n              currentValue.val = Math.PI\n              i++\n            } else {\n              throw new TypeError(JSON.stringify({message: 'Число Пи должно быть отделено операндом', pos: i + 1}))\n            }\n            for (let j = i + 1; j < str.length; j++) {\n              if (str[j] === ' ') {\n                continue\n              } else if (!isNaN(parseInt(str[j]))) {\n                throw new TypeError(JSON.stringify({message: 'Число Пи должно быть отделено операндом', pos: i + 1}))\n              } else {\n                break\n              }\n            }\n          }\n  \n          else if (!isNaN(parseInt(sym, 10))) {\n            if (currentValue.dotState === 0) {\n              if (currentValue.val === 0) {\n                currentValue.val += parseInt(sym, 10) * currentValue.posState\n              } else {\n                currentValue.val = currentValue.val * 10 + parseInt(sym, 10) * currentValue.posState\n              }\n            } else if (currentValue.dotState === 10) {\n              currentValue.val = +(`${currentValue.val}.${parseInt(sym, 10)}`)\n              currentValue.dotState *= 10\n            } else {\n              currentValue.val = +(`${currentValue.val}${parseInt(sym, 10)}`)\n              currentValue.dotState *= 10\n            }\n          }\n  \n          else if (sym === '+') {\n            operators.push('sum')\n            numbers.push(currentValue.val)\n            currentValue.val = 0\n            currentValue.posState = 1\n            currentValue.dotState = 0\n          }\n          else if (sym === '-' && i !== 0) {\n            operators.push('dec')\n            numbers.push(currentValue.val)\n            currentValue.val = 0\n            currentValue.posState = 1\n            currentValue.dotState = 0\n          }\n          else if (sym === '-' && (i === 0 || str[i - 1] === '(')) {\n            currentValue.posState = -1\n          }\n  \n          else if (sym === '!' ) {\n            currentValue.val = getFact(currentValue.val, i)\n          }\n  \n          else if (sym === 'l') {\n            if (str[i + 1] === 'n') {\n              currentValue.logData.basis = Math.E\n              i++\n            } else if (str[i + 1] === 'g') {\n              currentValue.logData.basis = 10\n              i++\n            } else if (str[i + 1] === 'b') {\n              currentValue.logData.basis = 2\n              i++\n            } else if (str.slice(i + 1, i + 3) === 'og') {\n              for (let j = i + 3; j < str.length; j++) {\n                if (!isNaN(parseInt(str[j], 10)) || str[j] === '.' || str[j] === ',' || str[j] === '-') {\n                  currentValue.logData.basis = currentValue.logData.basis\n                    ? `${currentValue.logData.basis}${str[j]}`\n                    : str[j]\n                } else if (str[j] === '(' && currentValue.logData.basis !== null) {\n                  i = j - 1\n                  break\n                } else {\n                  throw new TypeError(JSON.stringify({message: 'Не указано основание логарифма', pos: j}))\n                }\n                if (j === str.length - 1) {\n                  i += 2\n                  break\n                }\n              }\n            } else {\n              throw new TypeError(JSON.stringify({message: 'Ошибка в указании логарифма', pos: i}))\n            }\n\n            if (str[i + 1] !== '(') {\n              throw new TypeError(JSON.stringify({message: 'Не указано значение логарифма', pos: i + 1}))\n            }\n          }\n  \n          else if (sym === '(' && currentValue.logData.basis === null) {\n            currentValue.bracketsLevel += 1\n            const parsed = parseBrackets(str, i)\n            const val = parsed.val\n            const answer = Parser().parse(val)\n  \n            if (i !== 0 && currentValue.val === 0) {\n              currentValue.val = answer.expAnswer\n            } \n            if (i === 0 && str.length === parsed.index + 1) {\n              output.numbers = [...answer.numbers]\n              output.operators = [...answer.operators]\n              output.expAnswer = answer.expAnswer\n            } else if (i === 0 && str.length > parsed.index) {\n              currentValue.val = answer.expAnswer\n            }\n            if (i !== 0 && output.numbers.length === 0) {\n              output.numbers.push(output.expAnswer)\n            } else if (i !== 0 && output.numbers.length === 2) {\n              output.numbers = [...output.numbers, answer.expAnswer]\n            }\n\n            //if (currentValue.bracketsLevel)\n  \n            i = parsed.index\n          }\n  \n          else if (sym === '(' && currentValue.logData.basis !== null) {\n            currentValue.bracketsLevel += 1\n            const parsed = parseBrackets(str, i)\n            const val = parsed.val\n            const answer = Parser().parse(val)\n  \n            currentValue.logData.value = answer.expAnswer\n            const log = calculateLog(+currentValue.logData.basis, currentValue.logData.value)\n  \n            currentValue.val = log\n\n            currentValue.logData.basis = null\n            currentValue.logData.value = null\n  \n            i = parsed.index\n          }\n  \n          else if (sym === '*') {\n            operators.push('mul')\n            numbers.push(currentValue.val)\n            currentValue.val = 0\n            currentValue.posState = 1\n            currentValue.dotState = 0\n          }\n  \n          else if (sym === '^') {\n            operators.push('pow')\n            numbers.push(currentValue.val)\n            currentValue.val = 0\n            currentValue.posState = 1\n            currentValue.dotState = 0\n          }\n  \n          else if (sym === '/') {\n            operators.push('div')\n            numbers.push(currentValue.val)\n            currentValue.val = 0\n            currentValue.posState = 1\n            currentValue.dotState = 0\n          }\n\n          else if (sym !== ')') {\n            throw new TypeError(JSON.stringify({message: 'Недопустимый символ', pos: i}))\n          }\n  \n          if (i === str.length - 1) {\n            numbers.push(currentValue.val)\n          }\n        }\n    \n        if (operators.length > 1) {\n          const answer = operators.reduce((acc, operation, index) => {\n            output.expAnswer = output.expAnswer !== 0 ? output.expAnswer : acc \n            acc = operations[operation](output.expAnswer, output.numbers[index + 1])\n            output.expAnswer = acc\n            return acc\n          }, output.numbers[0])\n  \n          output.expAnswer = answer\n        }\n  \n        if (operators.length === 1) {\n          const answer = operators.reduce((acc, operation, index) => {\n            output.expAnswer = output.expAnswer !== 0 ? output.expAnswer : acc \n            acc = operations[operation](output.expAnswer, output.numbers[index + 1])\n            output.expAnswer = acc\n  \n            return acc\n          }, numbers[0])\n  \n          output.expAnswer = answer\n        }\n  \n        if (operators.length === 0 && !output.expAnswer) {\n          output.expAnswer = currentValue.val\n        }\n  \n        return output\n\n      } catch (error) {\n        throw error\n      }\n    }\n  }\n}\n\nexport default Parser\n","import React, { useState, useRef } from 'react'\nimport Parser from '../../parser/parser'\nimport styles from './StringInput.module.scss'\n\ninterface IError {\n  message: string\n  pos: null | number\n}\n\nconst StringInput = () => {\n\n  const parse = Parser().parse\n\n  const noErr: IError = {message: '', pos: null}\n  const errPointerRef = useRef(null)\n\n  const [exp, setExp] = useState('')\n  const [res, setRes] = useState(null)\n  const [err, setErr] = useState(noErr)\n\n  const submitHandler = (e): void => {\n    e.preventDefault()\n\n    try {\n      const ans = parse(exp).expAnswer\n      setRes(ans)\n    } catch (err) {\n      const error: IError = JSON.parse(err.message)\n      errPointerRef.current.style.left = `calc(${error.pos * 9}px + .25rem)`\n      setErr(error)\n      setRes(null)\n    }\n  }\n\n  const inputChangeHandler = (evt) => {\n    if (err.message) {\n      setErr(noErr)\n    }\n    setExp(evt.target.value)\n  }\n\n  return ( \n    <div>\n      <form onSubmit={submitHandler}>\n        <div className={styles.formWrapper}>\n          <div className={styles.inputWrapper}>\n            <input type='text' className={styles.input} value={exp} onChange={inputChangeHandler} />\n            <div\n              className={`${styles.errPointer} ${err.pos !== null ? styles.showPointer : ''}`}\n              ref={errPointerRef}\n            />\n          </div>\n          <button type='submit' className={styles.calcBtn} title='Посчитать'>=</button>\n          {err.message && <p className={styles.errDescription}>{err.message}</p>}\n        </div>\n      </form>\n      <div className={styles.resultWrapper}>\n        <p className={styles.result}>Ответ: {res}</p>\n      </div>\n      <ul style={{width: 'fit-content', margin: '0 auto'}}>Формальный синтаксис и ограничения:\n        <li>Простые арифметические операции: <strong>a+b-c*d/e</strong></li>\n        <li>Операции вычисляются <strong>в порядке указания!</strong> (нет приоритета умножения, деления, и тд)</li>\n        <li>Возведение в степень: <strong>x^y</strong></li>\n        <li>Факториал: <strong>x!</strong></li>\n        <li>Логарифмы (без выражений в основании, без скобок в значении (без скобок внутри скобок)):\n          <ul>\n            <li>Логарифм от x по основанию y: <strong>logy(x)</strong></li>\n            <li>Натуральный логарифм от х: <strong>ln(x)</strong></li>\n            <li>Логарифм от х по оcнованию 10: <strong>lg(x)</strong></li>\n            <li>Логарифм от х по оcнованию 2: <strong>lb(x)</strong></li>\n          </ul>\n        </li>\n        <li>Константы:\n          <ul>\n            <li>Число Эйлера (~2,7183): <strong>e</strong></li>\n            <li>Число π (~3,1416): <strong>pi</strong></li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default StringInput\n","import React, {useState} from 'react'\nimport BasicButtons from '../BasicButtons/BasicButtons'\nimport StringInput from '../StringInput/StringInput'\nimport './App.css'\n\nfunction App() {\n  const [stringInputMode, setStringInputMode] = useState(false)\n  return (\n    <div className=\"App\">\n      <input type='checkbox' checked={stringInputMode} onChange={() => setStringInputMode(prev => !prev)}/>\n      {!stringInputMode && <StringInput />}\n      {stringInputMode && <BasicButtons />}\n    </div>\n  )\n}\n\nexport default App\n","import { Istate } from './storeTypes'\n\nconst initialState: Istate = {\n  mode: 'simple',\n  curValue: null,\n  prevValue: null,\n  operator: null,\n  isDot: false,\n}\n\nexport default initialState\n","import initialState from './initialState'\nimport { Istate, actionType } from './storeTypes'\nimport actions from './actions'\n\nconst reducer = (state = initialState, action: actionType): Istate => {\n  switch (action.type) {\n\n    case actions.setCur:\n      if (state.operator && !state.prevValue) {\n        return {\n          ...state,\n          prevValue: state.curValue,\n          curValue: action.value !== '.' ? action.value! : null,\n        }\n      }\n      if (state.isDot) {\n        return {\n          ...state,\n          curValue: +(`${state.curValue}.${action.value}`),\n          isDot: false,\n        }\n      }\n      return {\n        ...state,\n        curValue: +(`${state.curValue ?? ''}${action.value}`)\n      }\n    case actions.sum:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.curValue + state.prevValue,\n          prevValue: null,\n          operator: 'sum'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'sum',\n      }\n\n    case actions.dec:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.prevValue - state.curValue,\n          prevValue: null,\n          operator: 'dec'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'dec',\n      }\n\n    case actions.mul:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.prevValue * state.curValue,\n          prevValue: null,\n          operator: 'mul'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'mul',\n      }\n\n    case actions.div:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: state.prevValue / state.curValue,\n          prevValue: null,\n          operator: 'div'\n        }\n      }\n      return {\n        ...state,\n        prevValue: state.curValue,\n        curValue: null,\n        operator: 'div',\n      }\n\n    case actions.perc:\n      if (state.prevValue) {\n        return {\n          ...state,\n          curValue: (state.prevValue / 100) * state.curValue,\n        }\n      }\n      return {\n        ...state,\n        curValue: state.curValue / 100,\n      }\n\n    case actions.inv:\n      return {\n        ...state,\n        curValue: state.curValue * (-1)\n      }\n\n    case actions.setDot:\n      return {\n        ...state,\n        isDot: true,\n      }\n\n    case actions.calculate:\n      return {\n        ...state,\n        operator: null,\n      }\n    \n    case actions.clear:\n      return {\n        ...state,\n        curValue: null,\n        prevValue: null,\n        operator: null,\n      }\n\n    case actions.remove:\n      return {\n        ...state,\n        curValue: +(`${state.curValue}`.slice(0, -1)),\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { createStore } from 'redux'\nimport reducer from './reducer'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducer, composeWithDevTools())\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}